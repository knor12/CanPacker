/*
* Generated using  CanPacker version V0.01.
* Description file used is ./description.csv, edit the description, the regenerate the source code, do not edit this file manualy.
*/
#ifndef CAN_DEVICE 
#define CAN_DEVICE

#ifdef __cplusplus 
extern "C" 
{ 
#endif		/* __cplusplus */ 


#include "CAN_DEVICE_glue.h"
#include <stdbool.h>
#include <stdint.h>


typedef enum 
{
    ON = 1,
    OFF = 0,

} ON_OFF_t;
typedef enum 
{
    PUSHED = 10,
    RELEASED = 20,

} BUTTON_STATE_t;
typedef enum 
{
    voltage_within_range = 22,
    voltage_over_voltgae = 33,
    voltage_under_votgae = 44,

} VOLTAGE_STATE_STATE_t;







/*"	send device health data to others		"*/
bool HEALTH_pack(
    const uint32_t ID,
    uint8_t * pData
    /*,const uint32_t HEALTH_MULTIPLEXOR */ /*key */ /*is a constant no argument is used*/
    /*,const  uint16_t VOLTAGe_HEALTH */  /*value taken from get_voltageUpdate(), */ ,
    const uint16_t CURRENTHEALTH  ,
    const ON_OFF_t IO  );

/*"	resets device		"*/
bool RESET_pack(
    const uint32_t ID,
    uint8_t * pData
    /*,const uint32_t RESET_CONSTANT */  /*is a constant no argument is used*/);






/*"	send device health data to others		"*/
bool HEALTH_unpack(
    const uint32_t ID,
    const uint8_t * pData
    /*uint32_t HEALTH_MULTIPLEXOR */ /*key */ /*is a constant no argument is used*/
    /*uint16_t * VOLTAGe_HEALTH */  /*value set to set_voltageUpdate() */ ,
    uint16_t * CURRENTHEALTH  
    /*ON_OFF_t * IO */  /*value set to set_IO_ON_OFF() */ );

/*"	resets device		"*/
bool RESET_unpack(
    const uint32_t ID,
    const uint8_t * pData
    /*uint32_t RESET_CONSTANT */  /*is a constant no argument is used*/);

#ifdef __cplusplus
}
#endif		/* __cplusplus */





#endif /*CAN_DEVICE*/